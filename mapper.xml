<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin_DB">
	<select id="all_admin" parameterType="String" resultType="userdao">
		select * from admin order by aidx desc
	</select>
	
	<select id="all_notice" parameterType="String" resultType="noticedao">
		select * from notice order by ntop ,nidx desc
	</select>
	
	<select id="admin_siteinfo" parameterType="String" resultType="siteinfo">
		select * from homepage order by hidx desc
	</select>
	
	<select id="faq_list" parameterType="String" resultType="faqdto">
		select * from faqlist order by fidx desc
	</select>
	
	<select id="ticketlist" parameterType="String" resultType="ticketlist">
		select * from ticketlist order by tidx desc
	</select>
	
	<insert id="notice_insert">
		insert into notice (nidx,ntop,ntitle,nwriter,nfile,ntext,number,ndate) values ('0',#{ntop},#{ntitle},#{nwriter},#{nfile},#{ntext},'0',now())
	</insert>
	
	<insert id="air_newcode">
		insert into air_code (aidx,airplane,airname,aircode,airflight,airuse,airdate) values ('0',#{airplane},#{airname},#{aircode},#{airflight},#{airuse},now())
	</insert>
	
	<insert id="prodcut_new">
		insert into air_plane (pidx,aidx,aircode,airflight,start_point,end_point,seat_style,seat,air_use,indate) values ('0',#{aidx},#{aircode},#{airflight},#{start_point},#{end_point},#{seat_style},#{seat},#{air_use},now())
	</insert>
	
	<insert id="faq_write">
		insert into faqlist (fidx,ftitle,fwriter,ftext,fdate) values ('0',#{ftitle},#{fwriter},#{ftext},now())
	</insert>
	
	<insert id="admin_seatok">
		insert into seatlist (sidx,pidx,startday,endday,smoney,sdate) values ('0',#{pidx},#{startday},#{endday},#{smoney},now())
	</insert>
	
	<select id="notice_view" parameterType="String" resultType="noticedao">
		select * from notice where nidx=#{nidx}
	</select>
	
	<select id="product_list" parameterType="String" resultType="viewdto">
		select * from air_view order by pidx desc
	</select>
	<select id="airdao" parameterType="String" resultType="airdao">
		select * from air_code group by airplane desc
	</select>
	
	<select id="airname" parameterType="String" resultType="integer">
		select count(*) as ctn from air_code where airname=#{airname}
	</select>
	
	<select id="aircode" parameterType="String" resultType="integer">
		select count(*) as ctn from air_code where aircode=#{aircode}
	</select>
	
	<select id="aircodeview" parameterType="String" resultType="airdao">
		select * from air_code where aidx=#{aidx}
	</select>
	
	<select id="faq_modify" parameterType="String" resultType="faqdto">
		select * from faqlist where fidx=#{fidx}
	</select>
	
	<update id="adminuse_update" parameterType="String">
		update admin set ause='Y' where aidx=#{aidx}
	</update>
	
	<update id="adminuse_update2" parameterType="String">
		update admin set ause='N' where aidx=#{aidx}
	</update>
	
	<update id="notice_modify">
		update notice set ntop=#{ntop},ntitle=#{ntitle},nwriter=#{nwriter},nfile=#{nfile},ntext=#{ntext} where nidx=#{nidx}
	</update>
	
	<update id="aircodemodify">
		update air_code set airplane=#{airplane},airname=#{airname},aircode=#{aircode},airflight=#{airflight},airuse=#{airuse} where aidx=#{aidx}
	</update>
	
	<update id="faq_modifyok">
		update faqlist set ftitle=#{ftitle},fwriter=#{fwriter},ftext=#{ftext} where fidx=#{fidx}
	</update>
	
	<update id="notice_number">
		update notice set number=number+1 where nidx=#{nidx}
	</update>
	
	<delete id="notice_delete">
		delete from notice where nidx in (#{nidx})
	</delete>
	
	<delete id="product_delete">
		delete from air_plane where pidx in (#{pidx})
	</delete>
	
	<delete id="aircodedelete">
		delete from air_code where aidx in (#{aidx})
	</delete>
	
	<delete id="faq_delete">
		delete from faqlist where fidx in (#{fidx})
	</delete>
	
	<delete id="ticketing_cancle">
		delete from ticketlist where tidx in (#{tidx})
	</delete>
	
	<select id="search_plane" parameterType="Map" resultType="viewdto">
	 	select * from air_view
	 	<where> <!-- where 태그 sql where과 동일함
	 		test 속성 논리연산자로 조건식에 사용함
	 		if 태그 : 조건을 선언, || 대신(or) && 대신(and) 단어로 입력
	 		if 조건시 문자 '' 이용, 숫자는 그냥 입력
	 		문자에 값이 없는 사항 null
	 	 -->
	 		<if test="part == 1"> <!-- 첫번째 조건 -->
	 			airname like concat ('%',#{search},'%')
	 		</if>
	 		<if test="part == 2">
	 			aircode like concat ('%',#{search},'%')
	 		</if>
	 	</where>
	 		order by pidx desc
	 </select>
	 
	 <select id="search_plane2" parameterType="Map" resultType="airdao">
	 	select * from air_code
	 	<where> <!-- where 태그 sql where과 동일함
	 		test 속성 논리연산자로 조건식에 사용함
	 		if 태그 : 조건을 선언, || 대신(or) && 대신(and) 단어로 입력
	 		if 조건시 문자 '' 이용, 숫자는 그냥 입력
	 		문자에 값이 없는 사항 null
	 	 -->
	 		<if test="part == 1"> <!-- 첫번째 조건 -->
	 			airname like concat ('%',#{search},'%')
	 		</if>
	 		<if test="part == 2">
	 			aircode like concat ('%',#{search},'%')
	 		</if>
	 	</where>
	 		order by aidx desc
	 </select>
	 
	 <select id="search_plane3" parameterType="Map" resultType="viewdto">
	 	select * from air_view
	 	<where> <!-- where 태그 sql where과 동일함
	 		test 속성 논리연산자로 조건식에 사용함
	 		if 태그 : 조건을 선언, || 대신(or) && 대신(and) 단어로 입력
	 		if 조건시 문자 '' 이용, 숫자는 그냥 입력
	 		문자에 값이 없는 사항 null
	 	 -->
	 		<if test="part == 1"> <!-- 첫번째 조건 -->
	 			start_point like concat ('%',#{search},'%')
	 		</if>
	 		<if test="part == 2">
	 			end_point like concat ('%',#{search},'%')
	 		</if>
	 	</where>
	 		order by pidx desc
	 </select>
	 
	 <select id="search_ticket" parameterType="Map" resultType="ticketlist">
	 	select * from ticketlist
	 	<where> <!-- where 태그 sql where과 동일함
	 		test 속성 논리연산자로 조건식에 사용함
	 		if 태그 : 조건을 선언, || 대신(or) && 대신(and) 단어로 입력
	 		if 조건시 문자 '' 이용, 숫자는 그냥 입력
	 		문자에 값이 없는 사항 null
	 	 -->
	 		<if test="part == 1"> <!-- 첫번째 조건 -->
	 			tname like concat ('%',#{search},'%')
	 		</if>
	 		<if test="part == 2">
	 			ttel like concat ('%',#{search},'%')
	 		</if>
	 	</where>
	 		order by tidx desc
	 </select>
	 
	 <select id="search_faq" parameterType="Map" resultType="faqdto">
	 	select * from faqlist
	 	<where>
	 			ftext like concat ('%',#{search},'%') or ftitle like concat ('%',#{search},'%')
	 	</where>
	 		order by fidx desc
	 </select>
	 
	 <select id="air_code2" parameterType="String" resultType="airdao">
	 	select airname from air_code where airplane = #{airplane} group by airname
	 </select>
	 
	 <select id="air_code3" parameterType="String" resultType="airdao">
	 	select aircode,airflight from air_code where airname = #{airname} group by aircode,airflight
	 </select>
	 
	 <select id="air_code4" parameterType="String" resultType="airdao">
	 	select airflight,aidx from air_code where aircode = #{aircode} group by airflight
	 </select>
</mapper>